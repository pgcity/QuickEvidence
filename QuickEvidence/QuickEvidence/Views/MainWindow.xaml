<Window x:Class="QuickEvidence.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:views="clr-namespace:QuickEvidence.Views"
        Height="626.726" Width="1093.844" ResizeMode="{Binding ResizeMode}"
        WindowState="{Binding WindowState}" WindowStyle="{Binding WindowStyle}"
        Title="{Binding WindowTitle}">
    <Window.Resources>
        <ResourceDictionary>
            <views:ToggleConverter x:Key="toggleConverter"/>
            <views:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
            <views:ValueConverterGroup x:Key="toggleToVisibilityConverter">
                <views:ToggleConverter/>
                <BooleanToVisibilityConverter/>
            </views:ValueConverterGroup>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F11" Command="{Binding FullScreenCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding CancelCommand}"/>
        <KeyBinding Key="F5" Command="{Binding UpdateCommand}"/>
        <KeyBinding Key="F1" Command="{Binding HelpCommand}"/>
        <KeyBinding Key="F2" Command="{Binding RenameCommand}"/>
        <KeyBinding Key="Delete" Command="{Binding DeleteFileCommand}"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <prism:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewMouseWheel">
            <prism:InvokeCommandAction Command="{Binding MouseWheelCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="283*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="784*"/>
        </Grid.ColumnDefinitions>

        <!-- 左上ボタン群-->
        <Button HorizontalAlignment="Left" Width="30" Height="30" VerticalAlignment="Top"
                Command="{Binding UpdateFileListCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="再読み込み">
            <iconPacks:PackIconMaterial Kind="Refresh" Foreground="DarkGreen" />
        </Button>
        <Button HorizontalAlignment="Left" Margin="30,0,0,0" Width="30" Height="30" VerticalAlignment="Top"
                Command="{Binding OnUpFileCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="上のファイルと内容を交換">
            <iconPacks:PackIconMaterial Kind="ArrowUp" Foreground="Gray"/>
        </Button>
        <Button HorizontalAlignment="Left" Margin="60,0,0,0" Width="30" Height="30" VerticalAlignment="Top"
                Command="{Binding OnDownFileCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="下のファイルと内容を交換">
            <iconPacks:PackIconMaterial Kind="ArrowDown" Foreground="Gray" />
        </Button>
        <Button Margin="100,0,0,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" Width="30"
                Command="{Binding DeleteFileCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="削除">
            <iconPacks:PackIconMaterial Kind="Delete" Foreground="Gray" />
        </Button>
        <Button Margin="0,0,0,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                Command="{Binding HelpCommand}"
                ToolTip="ヘルプ(F1)">
            <iconPacks:PackIconMaterial Kind="Help" Foreground="Gray" />
        </Button>

        <!--ファイルリスト-->
        <!--仮想化する場合は  
            EnableRowVirtualization="True"
            VirtualizingStackPanel.VirtualizationMode="Standard" -->
        <DataGrid x:Name="fileListDataGrid" Margin="0,30,0,30" SelectionMode="Extended"
                  ItemsSource="{Binding FileItems}"
                  AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False"
                  EnableRowVirtualization="False"
                  IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}, Mode=TwoWay}"
                  views:IsEditingBehavior.IsEditing="{Binding IsFileNameEditing, Mode=TwoWay}">
            <i:Interaction.Behaviors>
                <views:IsEditingBehavior/>
            </i:Interaction.Behaviors>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding FileSelectionChangedCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <prism:InvokeCommandAction Command="{Binding FileListPreviewKeyDownCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="Tag" 
                            Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},
                            Path=DataContext}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="最新の情報に更新" InputGestureText="F5" Command="{Binding UpdateCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="Refresh" Foreground="DarkGreen" Margin="3 0 0 0" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="削除" InputGestureText="Del" Command="{Binding DeleteFileCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="Delete" Foreground="Gray" Margin="3 0 0 0" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="名前の変更" InputGestureText="F2" Command="{Binding RenameCommand}"/>
                                <MenuItem Header="上のファイルと内容を交換" Command="{Binding OnUpFileCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="ArrowUp" Foreground="Gray" Margin="3 0 0 0" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="下のファイルと内容を交換" Command="{Binding OnDownFileCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconMaterial Kind="ArrowDown" Foreground="Gray" Margin="3 0 0 0" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="32" IsReadOnly="True">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.Header>
                        <iconPacks:PackIconMaterial Kind="OpenInNew" Width="10" Height="10" Foreground="Gray"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="24" Height="24" Command="{Binding OnOpenCommand}" Background="Transparent" BorderBrush="Transparent">
                                <iconPacks:PackIconMaterial Kind="OpenInNew" Width="11" Height="11" Foreground="Gray" ToolTip="ファイルを開く"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="200" Binding="{Binding FileName}" Header="ファイル"/>
                <DataGridTextColumn Width="200" Binding="{Binding FolderPath}" Header="フォルダー" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>

        <!--左下ボタン群-->
        <Button HorizontalAlignment="Left" Margin="0,0,0,0" Width="30" Height="30" VerticalAlignment="Bottom"
                Command="{Binding FolderSelectCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="フォルダーを変更">
            <Image Source="/QuickEvidence;component/res/Folder_16x.png"/>
        </Button>
        <TextBox IsReadOnly="True" Text="{Binding FolderPath}" Margin="30,0,30,0" Height="30" VerticalAlignment="Bottom"
                 IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"/>
        <Button HorizontalAlignment="Right" Margin="0,0,0,0" Width="30" Height="30" VerticalAlignment="Bottom" Grid.ColumnSpan="1"
                Command="{Binding OpenExplorerCommand}"
                IsEnabled="{Binding IsModify, Converter={StaticResource inverseBooleanConverter}}"
                ToolTip="エクスプローラーでフォルダーを開く">
            <Image Source="../res/Open_16x.png"/>
        </Button>

        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center"/>

        <!--選択中・入力中の枠-->
        <Rectangle Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="{Binding SelectingRectangleMargin}" 
                   Width="{Binding SelectingRectangleWidth}"
                   Height="{Binding SelectingRectangleHeight}"
                   StrokeThickness="{Binding SelectingRectangleLineWidth}"
                   Fill="Transparent"
                   Panel.ZIndex="1000"
                   Visibility="{Binding RectangleVisibility}"
                   Cursor="Cross">
            <Rectangle.Stroke>
                <SolidColorBrush Color="{Binding SelectedColor}" />
            </Rectangle.Stroke>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseMove">
                    <prism:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Rectangle>

        <!--画像コンテンツ領域-->
        <ScrollViewer Name="mainScrollViewer" Grid.Column="2" Margin="0,0,0,0" HorizontalScrollBarVisibility="Visible" Background="#FFF6F6F6">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <prism:InvokeCommandAction Command="{Binding ViewBoxKeyDownCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Viewbox Name="mainViewBox" Width="{Binding ViewBoxWidth}" Height="{Binding ViewBoxHeight}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <prism:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <prism:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Image Source="{Binding ImageSource}" Cursor="{Binding ImageMouseCursor}"/>
            </Viewbox>
        </ScrollViewer>

        <!--メイン上部ボタン群-->
        <Button Grid.Column="2" HorizontalAlignment="Left" Margin="10,10,0,0" Width="30" Height="30" VerticalAlignment="Top"
                Visibility="{Binding IsModify, Converter={StaticResource booleanToVisibilityConverter}}"
                Command="{Binding CancelCommand}"
                ToolTip="変更をキャンセル">
            <Image Source="../res/Cancel_16x.png"/>
        </Button>
        <Button Grid.Column="2" HorizontalAlignment="Left" Margin="51,10,0,0" Width="30" Height="30" VerticalAlignment="Top"
                Visibility="{Binding IsModify, Converter={StaticResource booleanToVisibilityConverter}}"
                Command="{Binding SaveCommand}"
                ToolTip="変更を保存">
            <Image Source="../res/Checkmark_16x.png" />
        </Button>

        <TextBlock Grid.Column="2" Width="70" Margin="0,15,280.2,0"
                   TextAlignment="Right" HorizontalAlignment="Right" Height="30" VerticalAlignment="Top"
                   Text="{Binding ExpansionRate, StringFormat={}{0}%}"/>
        <Slider Grid.Column="2" Width="150" Margin="0,10,125.2,0" HorizontalAlignment="Right" Height="30" VerticalAlignment="Top"
                Maximum="500" Minimum="10" 
                LargeChange="10" SmallChange="10"
                Value="{Binding ExpansionRate}" IsMoveToPointEnabled="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ValueChanged">
                    <i:InvokeCommandAction Command="{Binding ExpansionRateChangedCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Slider>
        <Button Grid.Column="2" HorizontalAlignment="Right" Margin="0,10,90,0" Width="30" Height="30" VerticalAlignment="Top"
                Command="{Binding ColorPickCommand}"
                ToolTip="色を変更">
            <Rectangle Width="20" Height="20">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding SelectedColor}"/>
                </Rectangle.Fill>
            </Rectangle>
        </Button>
        <ToggleButton Content="A" FontSize="16" FontWeight="Bold" FontFamily="Century" Grid.Column="2" Margin="0,10,55,0" Height="30" 
                      VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                      IsChecked="{Binding SelectedToolBarButton, Converter={StaticResource toggleConverter}, ConverterParameter=text}"
                      ToolTip="テキスト入力">
        </ToggleButton>
        <ToggleButton Grid.Column="2" Margin="0,10,20,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                      IsChecked="{Binding SelectedToolBarButton, Converter={StaticResource toggleConverter}, ConverterParameter=rectangle}"
                      ToolTip="枠を描画">
            <Image Source="../res/Rectangle_16x.png" />
        </ToggleButton>
        <ToggleButton Grid.Column="2" Margin="0,45,20,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                      IsChecked="{Binding SelectedLineWidthItem, Converter={StaticResource toggleConverter}, ConverterParameter=5px}"
                      Visibility="{Binding SelectedToolBarButton, Converter={StaticResource toggleToVisibilityConverter}, ConverterParameter=rectangle}"
                      ToolTip="5px">
            <Rectangle Width="18" Height="5" Stroke="{Binding SelectedColor}">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding SelectedColor}"/>
                </Rectangle.Fill>
            </Rectangle>
        </ToggleButton>
        <ToggleButton Grid.Column="2" Margin="0,80,20,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                      IsChecked="{Binding SelectedLineWidthItem, Converter={StaticResource toggleConverter}, ConverterParameter=3px}"
                      Visibility="{Binding SelectedToolBarButton, Converter={StaticResource toggleToVisibilityConverter}, ConverterParameter=rectangle}"
                      ToolTip="3px">
            <Rectangle Width="18" Height="3" Stroke="{Binding SelectedColor}">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding SelectedColor}"/>
                </Rectangle.Fill>
            </Rectangle>        
        </ToggleButton>
        <ToggleButton Grid.Column="2" Margin="0,115,20,0" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Width="30"
                      IsChecked="{Binding SelectedLineWidthItem, Converter={StaticResource toggleConverter}, ConverterParameter=1px}"
                      Visibility="{Binding SelectedToolBarButton, Converter={StaticResource toggleToVisibilityConverter}, ConverterParameter=rectangle}"
                      ToolTip="1px">
            <Rectangle Width="18" Height="1" Stroke="{Binding SelectedColor}">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding SelectedColor}"/>
                </Rectangle.Fill>
            </Rectangle>
        </ToggleButton>
    </Grid>
</Window>
